#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>

#define LEFT_PARENTHESIS '('

static char *vulnerable_c_functions[5] = {
	"strcmp", "gets", "strcpy", "strcat", "sprintf"
};

static char *vuln_func_info[5] = {
	"\tStrcmp() causes a buffer-overflow. This happens when a user supplies\n\ta large input than the buffer can hold.\
	To be on the safe side, make use of strncmp()",
	"\tgets() causes a buffer-overflow. It does not perform bound checking. To be on the safe side, make use of fgets()",
	"\tstrcpy() causes a buffer-overflow if the 'src' string is larger than the 'dest' string. To be on the safe side,\
	make use of strlcpy()",
	"\tstrcat() causes a buffer-overflow or segmentation fault. It does not perform bound checking. To be on the safe side,\
	make use of strncat() or strlcat()",
	"\tsprintf() causes a buffer-overflow as it does not perform bound checking. To be on the safe side, make use of snprintf()"
};

void banner();
void help();
bool check_mem_leak(const char*);
void vuln_check(const char *, const char *);
void read_program_file(const char*, char *);
const char *get_file_type(const char*); 

// I got this code from : https://github.com/libressl-portable/openbsd/blob/master/src/lib/string/
size_t strlcpy(char * __restrict dst, const char *__restrict src, size_t dsize);
